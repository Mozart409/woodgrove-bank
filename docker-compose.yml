version: '3.7'
services:
  frontend:
    depends_on:
      - ping
    build:
      context: frontend/
      dockerfile: Dockerfile.dev
    container_name: frontend
    ports:
      - '3000:3000'
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.rule=Host("frontend.docker.localhost")
    volumes:
      - ./frontend:/app/
      - /app/node_modules
      - /app/.next

  buy:
    depends_on:
      - redis
      - postgres
    build:
      context: backend/buy
      dockerfile: Dockerfile
    container_name: buy
    ports:
      - '4001:4000'
    labels:
      - traefik.enable=true
      - traefik.http.routers.buy.tls=true
      - traefik.http.routers.buy.rule=Host("buy.docker.localhost")

  auth:
    depends_on:
      - redis
      - postgres
    build:
      context: backend/auth
      dockerfile: Dockerfile
    container_name: auth
    ports:
      - '4002:4000'
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.tls=true
      - traefik.http.routers.auth.rule=Host("auth.docker.localhost")

  ping:
    depends_on:
      - redis
      - postgres
    build:
      context: backend/pingService
      dockerfile: Dockerfile
    container_name: ping
    ports:
      - '4003:4000'
    labels:
      - traefik.enable=true
      - traefik.http.routers.ping.tls=true
      - traefik.http.routers.ping.rule=Host("ping.docker.localhost")

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=redis

    ports:
      - '6379:6379'
    labels:
      - traefik.enable=true

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5422:5432'
    labels:
      - traefik.enable=true

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - '--log.level=WARN'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--pilot.token=9c7b5d97-84a5-48ac-b163-2b40aa76d664'

    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
